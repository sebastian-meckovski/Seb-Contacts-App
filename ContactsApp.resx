<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjykeAHcX
        GgCqPyIBq0AjAYojHQCXLR0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtPKgC5TSkCwFMrHMJV
        LEnDVSx1xFUrk8NVK6LBVCuiwFMqk8BTKnXAUypJvlEpHLhMKAK6TikAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL9TKwC8UCsFwlUsOsRX
        LJXGWC3Zxlgt+MdYLf/GWC3/w1Us/8JVLP/CVSv/wlUr/8NVK/jDVSvZwlQqlcBSKTq7TSgFvVAoAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALdMKADOXzAAwVUsIsVX
        LZXGWC7tx1ku/8dZLf/HWS3/xlkt/8NWLP/CVSv/wlUs/8JVLP/DVSv/w1Ur/8RVK//EViv/xFUq7cNU
        KZXAUSkjzForALVLJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9UisAoTkgAMNX
        LkXGWS7Qx1ov/8daL//HWS7/x1ku/8ZZLv/CViz/wVUs/8FVLP/CVSz/wlUs/8NVLP/DVSz/w1Ur/8RV
        K//EViv/xFYq/8RUKtDBUylFoz8kAbxPKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvlMrAEoA
        AADFWC5Tx1ov5chbMP/HWi//x1ov/8daL//GWS//wlYt/8BULf/AVCz/wVUs/8FVLP/CVSz/wlUs/8NV
        LP/DViz/w1Ur/8RVLP/EViv/xVYq/8RVKuXCUylTRQAbAL1PKQAAAAAAAAAAAAAAAAAAAAAAAAAAAL1S
        LADKXDEAxVgvRsdaMOTIWzD/yFsw/8hbMP/IWzD/x1ow/8JWLv+/VC3/wFUu/8FVLv/AVSz/wVUt/8FV
        Lf/CVSz/wlUs/8JWLP/DViz/w1Us/8NVLP/EViv/xVYq/8RVKuTCUypGxlUqALxQKQAAAAAAAAAAAAAA
        AAAAAAAAxVkwAMRZMCPHWzHPyFsx/8hbMf/IWzH/yFow/8VXLf++Uiv/u1Aq/7tQKv+8UCr/vFEq/71R
        Kv+9USn/vlEp/71RKf++UCj/v1Eo/79RKP/AUSj/wVMq/8NVK//EViv/xVYq/8RVKs/BUikjwlMqAAAA
        AAAAAAAAAAAAAMJXLgC/UisEx1sxlMhcMv/IXDL/yFwy/8hbMf/KZ0D/zodu/8qIcv/KiHL/y4hy/8uI
        cv/LiHH/y4hy/8yIcf/MiHD/zIhw/8yIcP/MiHD/zIhw/8uEa//BXjn/wVMq/8NVLP/EViv/xFYq/8RV
        KZW8TykEv1IpAAAAAAAAAAAAx1sxAMZbMTvIXTLsyF0y/8hdMv/IXTL/x1ov/9WNcf/w7+7/8fDw//Hw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/w8PD/7+7t/82Fa//AUSj/w1Us/8RV
        LP/EViv/xFYq7MNUKTvDVSkAAAAAAMFVLgCtQiMBx1wylMhdM//IXTP/yF0z/8hdM//HWjD/15J3//Lx
        8f/y8vL/8vLy//Ly8v/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8PD/zopx/79R
        KP/DViz/w1Ur/8RVK//EViv/w1Uqla9EJQG/USkAxlsxAMZbMRzIXTPYyF0z/8leNP/JXjT/yV40/8hb
        MP/Xknf/8vHx//Ly8v/y8vL/8vLy//Ly8v/y8vL/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hw
        8P/OinH/v1Eo/8NWLP/DViz/w1Ur/8RVK//EVivZwlQqHMJUKgDJXTQAyF0zScleNPjJXjT/yV40/8le
        NP/JXjT/yFwx/9OEZf/w7Ov/8vPz//Ly8v/y8vL/8vLy//Ly8v/y8vL/8fHx//Hx8f/x8fH/8fHx//Hx
        8f/x8vL/7+vp/8p7Xv+/Uin/wlYs/8NVLP/DVSv/w1Ur/8VWK/jFVitJxVYrAMpgNQDJXjV1yV81/8lf
        Nf/JXzX/yV81/8lfNf/JXzT/ymQ8/+K3p//y8/L/8vP0//Ly8v/y8vL/8vLy//Ly8v/y8vL/8fHx//Hx
        8f/x8fH/8fLz//Hy8v/ds6P/wVo0/8BULP/CVSz/wlUs/8NVLP/EViz/xlcr/8VWK3XHWCsAzGM6AMlf
        NpLJXzb/yV82/8lfNv/JXzb/yV82/8lfNv/JXjX/y2hB/92ok//u4t3/8vPz//P09f/y9PT/8vP0//Lz
        9P/z9PT/8vT1//Hy8v/s4Nz/2KOQ/8JfOv/AVCz/wVUt/8FVLf/CVSz/xVct/8dYLf/GVyz/xlcrk8pZ
        KQDMVzIByl82oclgN//JYDf/yWA3/8lgN//JYDf/yWA3/8lgN//JXjX/yV82/892VP/boIn/5cO2/+vX
        z//t39n/7N7Z/+nWz//iwbX/1ZuG/8ZuT/+/VS7/v1Ut/8FWLv/BVS3/wVUs/8RXLf/HWS3/x1gt/8ZX
        LP/GVyyhx1YwAdtuRwHKYTihyWA3/8phN//KYTf/ymE3/8phN//KYTf/yWA3/8lgN//JYDf/yV41/8hd
        M//JYTj/y2lC/8psR//EZkT/wGA+/75YM/++Uy3/vlQu/79VL//AVS7/wFYu/8FVLv/EVy7/x1ku/8dZ
        Lf/HWC3/x1gt/8dYLaHQZj8Bx1osAMtiOJLKYTf/ymE3/8phN//KYTf/ymE3/8phN//KYTf/ymE3/8ph
        N//JYDf/yWA3/8hdNP/FXDX/wGJC/71fQP+5UzD/u1Iu/71VMP+/Vi//v1Yw/79VLv+/VS7/xFgv/8da
        L//HWS7/x1kt/8dZLf/HWC3/x1gtksRPIQDKXzUAy2M6dcphOP/KYTj/ymE4/8phOP/KYTj/ymE4/8ph
        OP/KYTj/ymE3/8phN//IXzX/y29M/9yyo//o2NT/6NjU/9ivof+9ZEX/ulIu/75VMP++VTD/v1Uv/8NY
        L//IWzD/x1ov/8dZLv/HWS7/x1kt/8dYLf/IWi90x1YrAMtkOwDMZT1JymI5+MpiOf/KYjn/ymI5/8pi
        Of/KYjn/ymI5/8phOP/KYTj/ymE3/8pnQP/jwrb/8/X1//P09P/z9PT/8/X1/96+s/+6WTj/vFQv/75V
        MP/DWDH/yFsx/8hbMP/HWi//x1ov/8dZLv/HWS3/x1ku+MlcMknJWzAAzmlCAM5pQhzLZDvYymM6/8pj
        Ov/KYzr/ymM6/8pjOv/KYjn/ymI5/8piOf/JXzX/04Vm//Ds6//y8vP/8vLy//Ly8v/y8vP/8Ozr/8Z5
        YP+6US3/wlkx/8hcMv/IWzH/yFsw/8hbMP/HWi//x1ku/8dZLf/IWi/Yy2E3HMtgNwDRc04A5p6IAcxm
        PpXKYzr/ymM7/8pjO//KYzv/ymM6/8pjOv/KYzr/ymI5/8lfNf/XkXX/8vHx//Ly8v/y8vL/8vLy//Ly
        8v/y8fH/y4dw/79VLf/HXTL/yFwy/8hcMv/IWzH/yFsw/8daL//HWS7/x1ku/8ldMpXmo4sBz2xFAAAA
        AADMaEEAzWpEO8tkPezLZDz/y2Q8/8tkPP/KYzv/ymM7/8pjOv/KYzr/ymA3/9F9W//v5uP/8vPz//Ly
        8v/y8vL/8vP0/+7l4//KdVb/xlow/8hdMv/IXTL/yFwy/8hbMf/IWzD/x1ov/8dZLv/IWi/symE3O8le
        NAAAAAAAAAAAANF0UADVf10EzWhBlctkPP/LZDz/y2Q8/8tkPP/LZDz/ymM7/8pjOv/KYjn/ymM7/96p
        lP/x7u3/8/X1//P19f/x7u3/3KeS/8deNv/IXTP/yF0y/8hdMv/IXDL/yFsx/8hbMP/HWi//x1ov/8le
        NJTUelUEz2xFAAAAAAAAAAAAAAAAAM9tRgDPb0kjzGhAz8tlPP/LZTz/y2U8/8tkPP/KYzv/ymM6/8pj
        Ov/KYTj/y2U9/9eQdf/iuKj/4rio/9aPc//JYjr/yV40/8hdNP/IXTP/yF0y/8hcMv/IWzH/yFsw/8da
        L//IXTPPzGY9I8tjOgAAAAAAAAAAAAAAAAAAAAAA1oBeAMpiOQDPbkhGzGdA5MtlPf/LZTz/y2Q8/8pj
        PP/KYzv/ymM6/8piOf/KYTj/yV81/8lgNv/IXzb/yF0z/8lfNf/JXjT/yF0z/8hdM//IXTL/yFwy/8hb
        Mf/IWzD/yV0z5MtkPEbGVikA1HxYAAAAAAAAAAAAAAAAAAAAAAAAAAAA1XxaAP///wDPbkhTzGdA5ctl
        PP/LZDz/y2Q8/8pjO//KYzr/ymI5/8phOP/KYTf/ymE3/8lgN//JXzb/yV81/8leNP/IXTP/yF0z/8hd
        Mv/IXDL/yFsx/8leNOXMZTxT////ANJ3UwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1X9cAPLJ
        ugDPb0lFzWhB0MtlPf/KYzv/ymM7/8pjOv/KYjn/ymE4/8phN//KYTf/yWA3/8lfNv/JXzX/yV40/8hd
        M//IXTP/yF0y/8hcM//KYDbQzGc/RfXSwgDUelcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA2YttAMdUJwDRck4izmtElctmPu3KYzv/ymM5/8piOf/KYTj/ymE3/8lgN//JYDf/yV82/8lf
        Nf/JXjT/yF0z/8hdM//JXzXty2Q7lc5sRSLCSBoA2IhoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANN4VADXgF4F0HBKOs1qQ5XMZj7Zy2M7+MpiOf/KYTf/yWA3/8lf
        Nv/JXzb/yWA2/8pgNvjKYTjZy2Q8lc5rQzrVfFoF0XRPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXgF8A2odnAtJ1UBzPbkhJzWpDdc1o
        QZPMZ0CizGY/osxnP5PNaEF1zmtESdBxTBzXg2IC1X1aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//v0A////APjSwwH30cEB////AP/+/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//5////AA///AAD//gAAf/wAAB/4AAAf8AAAD+AAAAfAAAADwAAAA4AA
        AAGAAAABgAAAAYAAAAGAAAABAAAAAAAAAACAAAABgAAAAYAAAAGAAAABgAAAAcAAAAPAAAAD4AAAB/AA
        AA/4AAAf/AAAP/4AAH//AAD//8AD///+f/8=
</value>
  </data>
</root>